{"version":3,"file":"decorators.js","sourceRoot":"","sources":["../../lib/util/decorators.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { global, stringify } from '../facade/lang';\nimport { Type } from '../facade/type';\n\nlet _nextClassId = 0;\nconst Reflect = global['Reflect'];\n\n/**\n * Declares the interface to be used with {@link Class}.\n *\n * @stable\n */\nexport type ClassDefinition = {\n  /**\n   * Optional argument for specifying the superclass.\n   */\n  extends?: Type<any>;\n\n  /**\n   * Required constructor function for a class.\n   *\n   * The function may be optionally wrapped in an `Array`, in which case additional parameter\n   * annotations may be specified.\n   * The number of arguments and the number of parameter annotations must match.\n   *\n   * See {@link Class} for example of usage.\n   */\n  constructor: Function | any[];\n} & {\n  /**\n   * Other methods on the class. Note that values should have type 'Function' but TS requires\n   * all properties to have a narrower type than the index signature.\n   */\n  [x: string]: Type<any> | Function | any[];\n};\n\n/**\n * An interface implemented by all Angular type decorators, which allows them to be used as ES7\n * decorators as well as\n * Angular DSL syntax.\n *\n * DSL syntax:\n *\n * ```\n * var MyClass = ng\n *   .Component({...})\n *   .Class({...});\n * ```\n *\n * ES7 syntax:\n *\n * ```\n * @ng.Component({...})\n * class MyClass {...}\n * ```\n * @stable\n */\nexport interface TypeDecorator {\n  /**\n   * Invoke as ES7 decorator.\n   */\n  <T extends Type<any>>(type: T): T;\n\n  // Make TypeDecorator assignable to built-in ParameterDecorator type.\n  // ParameterDecorator is declared in lib.d.ts as a `declare type`\n  // so we cannot declare this interface as a subtype.\n  // see https://github.com/angular/angular/issues/3379#issuecomment-126169417\n  (target: Object, propertyKey?: string | symbol, parameterIndex?: number): void;\n\n  /**\n   * Storage for the accumulated annotations so far used by the DSL syntax.\n   *\n   * Used by {@link Class} to annotate the generated class.\n   */\n  annotations: any[];\n\n  /**\n   * Generate a class from the definition and annotate it with {@link TypeDecorator#annotations}.\n   */\n  Class(obj: ClassDefinition): Type<any>;\n}\n\nfunction extractAnnotation(annotation: any): any {\n  if (typeof annotation === 'function' && annotation.hasOwnProperty('annotation')) {\n    // it is a decorator, extract annotation\n    annotation = annotation.annotation;\n  }\n  return annotation;\n}\n\nfunction applyParams(fnOrArray: Function | any[] | undefined, key: string): Function {\n  if (fnOrArray === Object || fnOrArray === String || fnOrArray === Function || fnOrArray === Number || fnOrArray === Array) {\n    throw new Error(`Can not use native ${stringify(fnOrArray)} as constructor`);\n  }\n\n  if (typeof fnOrArray === 'function') {\n    return fnOrArray;\n  }\n\n  if (Array.isArray(fnOrArray)) {\n    const annotations: any[] = fnOrArray as any[];\n    const annoLength = annotations.length - 1;\n    const fn: Function = fnOrArray[annoLength];\n    if (typeof fn !== 'function') {\n      throw new Error(`Last position of Class method array must be Function in key ${key} was '${stringify(fn)}'`);\n    }\n    if (annoLength !== fn.length) {\n      throw new Error(\n        `Number of annotations (${annoLength}) does not match number of arguments (${fn.length}) in the function: ${stringify(fn)}`\n      );\n    }\n    const paramsAnnotations: any[][] = [];\n    for (let i = 0, ii = annotations.length - 1; i < ii; i++) {\n      const paramAnnotations: any[] = [];\n      paramsAnnotations.push(paramAnnotations);\n      const annotation = annotations[i];\n      if (Array.isArray(annotation)) {\n        for (let j = 0; j < annotation.length; j++) {\n          paramAnnotations.push(extractAnnotation(annotation[j]));\n        }\n      } else if (typeof annotation === 'function') {\n        paramAnnotations.push(extractAnnotation(annotation));\n      } else {\n        paramAnnotations.push(annotation);\n      }\n    }\n    Reflect.defineMetadata('parameters', paramsAnnotations, fn);\n    return fn;\n  }\n\n  throw new Error(`Only Function or Array is supported in Class definition for key '${key}' is '${stringify(fnOrArray)}'`);\n}\n\n/**\n * Provides a way for expressing ES6 classes with parameter annotations in ES5.\n *\n * ## Basic Example\n *\n * ```\n * var Greeter = ng.Class({\n *   constructor: function(name) {\n *     this.name = name;\n *   },\n *\n *   greet: function() {\n *     alert('Hello ' + this.name + '!');\n *   }\n * });\n * ```\n *\n * is equivalent to ES6:\n *\n * ```\n * class Greeter {\n *   constructor(name) {\n *     this.name = name;\n *   }\n *\n *   greet() {\n *     alert('Hello ' + this.name + '!');\n *   }\n * }\n * ```\n *\n * or equivalent to ES5:\n *\n * ```\n * var Greeter = function (name) {\n *   this.name = name;\n * }\n *\n * Greeter.prototype.greet = function () {\n *   alert('Hello ' + this.name + '!');\n * }\n * ```\n *\n * ### Example with parameter annotations\n *\n * ```\n * var MyService = ng.Class({\n *   constructor: [String, [new Optional(), Service], function(name, myService) {\n *     ...\n *   }]\n * });\n * ```\n *\n * is equivalent to ES6:\n *\n * ```\n * class MyService {\n *   constructor(name: string, @Optional() myService: Service) {\n *     ...\n *   }\n * }\n * ```\n *\n * ### Example with inheritance\n *\n * ```\n * var Shape = ng.Class({\n *   constructor: (color) {\n *     this.color = color;\n *   }\n * });\n *\n * var Square = ng.Class({\n *   extends: Shape,\n *   constructor: function(color, size) {\n *     Shape.call(this, color);\n *     this.size = size;\n *   }\n * });\n * ```\n * @suppress {globalThis}\n * @stable\n */\nexport function Class(this: any, clsDef: ClassDefinition): Type<any> {\n  const constructor = applyParams(clsDef.hasOwnProperty('constructor') ? clsDef.constructor : undefined, 'constructor');\n\n  let proto = constructor.prototype;\n\n  if (clsDef.hasOwnProperty('extends')) {\n    if (typeof clsDef.extends === 'function') {\n      (<Function>constructor).prototype = proto = Object.create((<Function>clsDef.extends).prototype);\n    } else {\n      throw new Error(`Class definition 'extends' property must be a constructor function was: ${stringify(clsDef.extends)}`);\n    }\n  }\n\n  for (const key in clsDef) {\n    if (key !== 'extends' && key !== 'prototype' && clsDef.hasOwnProperty(key)) {\n      proto[key] = applyParams(clsDef[key], key);\n    }\n  }\n\n  if (this && this.annotations instanceof Array) {\n    Reflect.defineMetadata('annotations', this.annotations, constructor);\n  }\n\n  const constructorName = constructor['name'];\n  if (!constructorName || constructorName === 'constructor') {\n    (constructor as any)['overriddenName'] = `class${_nextClassId++}`;\n  }\n\n  return <Type<any>>constructor;\n}\n\n/**\n * @suppress {globalThis}\n */\nexport function makeDecorator(\n  name: string,\n  props: { [name: string]: any },\n  parentClass?: any,\n  chainFn?: (fn: Function) => void\n): (...args: any[]) => (cls: any) => any {\n  const metaCtor = makeMetadataCtor([props]);\n\n  function DecoratorFactory(this: any, objOrType: any): (cls: any) => any {\n    if (!(Reflect && Reflect.getOwnMetadata)) {\n      throw 'reflect-metadata shim is required when using class decorators';\n    }\n\n    if (this instanceof DecoratorFactory) {\n      metaCtor.call(this, objOrType);\n      return this as typeof DecoratorFactory;\n    }\n\n    const annotationInstance = new (<any>DecoratorFactory)(objOrType);\n    const chainAnnotation = typeof this === 'function' && Array.isArray(this.annotations) ? this.annotations : [];\n    chainAnnotation.push(annotationInstance);\n    const TypeDecorator: TypeDecorator = <TypeDecorator>function TypeDecorator(cls: Type<any>) {\n      const annotations = Reflect.getOwnMetadata('annotations', cls) || [];\n      annotations.push(annotationInstance);\n      Reflect.defineMetadata('annotations', annotations, cls);\n      return cls;\n    };\n    TypeDecorator.annotations = chainAnnotation;\n    TypeDecorator.Class = Class;\n    if (chainFn) chainFn(TypeDecorator);\n    return TypeDecorator;\n  }\n\n  if (parentClass) {\n    DecoratorFactory.prototype = Object.create(parentClass.prototype);\n  }\n\n  DecoratorFactory.prototype.toString = () => `@${name}`;\n  (<any>DecoratorFactory).annotationCls = DecoratorFactory;\n  return DecoratorFactory;\n}\n\nfunction makeMetadataCtor(props: ([string, any] | { [key: string]: any })[]): any {\n  return function ctor(this: any, ...args: any[]) {\n    props.forEach((prop, i) => {\n      const argVal = args[i];\n      if (Array.isArray(prop)) {\n        // plain parameter\n        this[prop[0]] = argVal === undefined ? prop[1] : argVal;\n      } else {\n        for (const propName in prop) {\n          this[propName] = argVal && argVal.hasOwnProperty(propName) ? argVal[propName] : prop[propName];\n        }\n      }\n    });\n  };\n}\n\nexport function makeParamDecorator(name: string, props: ([string, any] | { [name: string]: any })[], parentClass?: any): any {\n  const metaCtor = makeMetadataCtor(props);\n  function ParamDecoratorFactory(this: unknown, ...args: any[]): any {\n    if (this instanceof ParamDecoratorFactory) {\n      metaCtor.apply(this, args);\n      return this;\n    }\n    const annotationInstance = new (<any>ParamDecoratorFactory)(...args);\n\n    (<any>ParamDecorator).annotation = annotationInstance;\n    return ParamDecorator;\n\n    function ParamDecorator(cls: any, unusedKey: any, index: number): any {\n      const parameters: (any[] | null)[] = Reflect.getOwnMetadata('parameters', cls) || [];\n\n      // there might be gaps if some in between parameters do not have annotations.\n      // we pad with nulls.\n      while (parameters.length <= index) {\n        parameters.push(null);\n      }\n\n      parameters[index] = parameters[index] || [];\n      parameters[index]!.push(annotationInstance);\n\n      Reflect.defineMetadata('parameters', parameters, cls);\n      return cls;\n    }\n  }\n  if (parentClass) {\n    ParamDecoratorFactory.prototype = Object.create(parentClass.prototype);\n  }\n  ParamDecoratorFactory.prototype.toString = () => `@${name}`;\n  (<any>ParamDecoratorFactory).annotationCls = ParamDecoratorFactory;\n  return ParamDecoratorFactory;\n}\n\nexport function makePropDecorator(name: string, props: ([string, any] | { [key: string]: any })[], parentClass?: any): any {\n  const metaCtor = makeMetadataCtor(props);\n\n  function PropDecoratorFactory(this: unknown, ...args: any[]): any {\n    if (this instanceof PropDecoratorFactory) {\n      metaCtor.apply(this, args);\n      return this;\n    }\n\n    const decoratorInstance = new (<any>PropDecoratorFactory)(...args);\n\n    return function PropDecorator(target: any, name: string) {\n      const meta = Reflect.getOwnMetadata('propMetadata', target.constructor) || {};\n      meta[name] = (meta.hasOwnProperty(name) && meta[name]) || [];\n      meta[name].unshift(decoratorInstance);\n      Reflect.defineMetadata('propMetadata', meta, target.constructor);\n    };\n  }\n\n  if (parentClass) {\n    PropDecoratorFactory.prototype = Object.create(parentClass.prototype);\n  }\n\n  PropDecoratorFactory.prototype.toString = () => `@${name}`;\n  (<any>PropDecoratorFactory).annotationCls = PropDecoratorFactory;\n  return PropDecoratorFactory;\n}\n"]}