{"version":3,"file":"index.js","sourceRoot":"","sources":["../lib/index.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH;;;;GAIG;AAEH,cAAc,YAAY,CAAC;AAE3B,OAAO,EAAE,UAAU,EAAE,iBAAiB,EAAgB,MAAM,eAAe,CAAC;AAE5E,OAAO,EAAE,QAAQ,EAAE,MAAM,YAAY,CAAC;AACtC,OAAO,EAAE,kBAAkB,EAAE,MAAM,uBAAuB,CAAC;AAE3D,OAAO,EAAE,yBAAyB,EAA8B,MAAM,uBAAuB,CAAC;AAC9F,OAAO,EAAE,aAAa,EAAE,MAAM,kBAAkB,CAAC;AACjD,OAAO,EAAE,cAAc,EAAE,WAAW,EAAE,MAAM,mBAAmB,CAAC;AAChE,OAAO,EAAE,KAAK,EAAiB,aAAa,EAAE,MAAM,mBAAmB,CAAC;AACxE,OAAO,EAAE,mBAAmB,EAAE,MAAM,6BAA6B,CAAC;AAClE,OAAO,EAAE,IAAI,EAAE,MAAM,EAAE,MAAM,eAAe,CAAC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @module\n * @description\n * The `di` module provides dependency injection container services.\n */\n\nexport * from './metadata';\n\nexport { forwardRef, resolveForwardRef, ForwardRefFn } from './forward_ref';\n\nexport { Injector } from './injector';\nexport { ReflectiveInjector } from './reflective_injector';\nexport { Provider, TypeProvider, ValueProvider, ClassProvider, ExistingProvider, FactoryProvider } from './provider';\nexport { ResolvedReflectiveFactory, ResolvedReflectiveProvider } from './reflective_provider';\nexport { ReflectiveKey } from './reflective_key';\nexport { InjectionToken, OpaqueToken } from './injection_token';\nexport { Class, TypeDecorator, makeDecorator } from './util/decorators';\nexport { resolveDependencies } from './util/resolve_dependencies';\nexport { Type, isType } from './facade/type';\n"]}