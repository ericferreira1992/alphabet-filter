{"version":3,"file":"reflection_capabilities.js","sourceRoot":"","sources":["../../lib/reflection/reflection_capabilities.ts"],"names":[],"mappings":"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","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { global, isPresent, stringify } from '../facade/lang';\nimport { Type, isType } from '../facade/type';\n\nimport { PlatformReflectionCapabilities } from './platform_reflection_capabilities';\nimport { GetterFn, MethodFn, SetterFn } from './types';\n\n/**\n * Attention: This regex has to hold even if the code is minified!\n */\nexport const DELEGATE_CTOR = /^function\\s+\\S+\\(\\)\\s*{[\\s\\S]+\\.apply\\(this,\\s*arguments\\)/;\n\nexport class ReflectionCapabilities implements PlatformReflectionCapabilities {\n  private _reflect: any;\n\n  constructor(reflect?: any) {\n    this._reflect = reflect || global['Reflect'];\n  }\n\n  isReflectionEnabled(): boolean {\n    return true;\n  }\n\n  factory<T>(t: Type<T>): (args: any[]) => T {\n    return (...args: any[]) => new t(...args);\n  }\n\n  /** @internal */\n  _zipTypesAndAnnotations(paramTypes: any[], paramAnnotations: any[]): any[][] {\n    let result: any[][];\n\n    if (typeof paramTypes === 'undefined') {\n      result = new Array(paramAnnotations.length);\n    } else {\n      result = new Array(paramTypes.length);\n    }\n\n    for (let i = 0; i < result.length; i++) {\n      // TS outputs Object for parameters without types, while Traceur omits\n      // the annotations. For now we preserve the Traceur behavior to aid\n      // migration, but this can be revisited.\n      if (typeof paramTypes === 'undefined') {\n        result[i] = [];\n        // tslint:disable-next-line:triple-equals\n      } else if (paramTypes[i] != Object) {\n        result[i] = [paramTypes[i]];\n      } else {\n        result[i] = [];\n      }\n      if (paramAnnotations && paramAnnotations[i] != null) {\n        result[i] = result[i].concat(paramAnnotations[i]);\n      }\n    }\n    return result;\n  }\n\n  private _ownParameters(type: Type<any>, parentCtor: any): any[][] | null {\n    // If we have no decorators, we only have function.length as metadata.\n    // In that case, to detect whether a child class declared an own constructor or not,\n    // we need to look inside of that constructor to check whether it is\n    // just calling the parent.\n    // This also helps to work around for https://github.com/Microsoft/TypeScript/issues/12439\n    // that sets 'design:paramtypes' to []\n    // if a class inherits from another class but has no ctor declared itself.\n    if (DELEGATE_CTOR.exec(type.toString())) {\n      return null;\n    }\n\n    // Prefer the direct API.\n    if ((<any>type).parameters && (<any>type).parameters !== parentCtor.parameters) {\n      return (<any>type).parameters;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    const tsickleCtorParams = (<any>type).ctorParameters;\n    if (tsickleCtorParams && tsickleCtorParams !== parentCtor.ctorParameters) {\n      // Newer tsickle uses a function closure\n      // Retain the non-function case for compatibility with older tsickle\n      const ctorParameters = typeof tsickleCtorParams === 'function' ? tsickleCtorParams() : tsickleCtorParams;\n      const paramTypes = ctorParameters.map((ctorParam: any) => ctorParam && ctorParam.type);\n      const paramAnnotations = ctorParameters.map(\n        (ctorParam: any) => ctorParam && convertTsickleDecoratorIntoMetadata(ctorParam.decorators)\n      );\n      return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n    }\n\n    // API for metadata created by invoking the decorators.\n    if (this._reflect != null && this._reflect.getOwnMetadata != null) {\n      const paramAnnotations = this._reflect.getOwnMetadata('parameters', type);\n      const paramTypes = this._reflect.getOwnMetadata('design:paramtypes', type);\n      if (paramTypes || paramAnnotations) {\n        return this._zipTypesAndAnnotations(paramTypes, paramAnnotations);\n      }\n    }\n\n    // If a class has no decorators, at least create metadata\n    // based on function.length.\n    // Note: We know that this is a real constructor as we checked\n    // the content of the constructor above.\n    return new Array(<any>type.length).fill(undefined);\n  }\n\n  parameters(type: Type<any>): any[][] {\n    // Note: only report metadata if we have at least one class decorator\n    // to stay in sync with the static reflector.\n    if (!isType(type)) {\n      return [];\n    }\n    const parentCtor = getParentCtor(type);\n    let parameters = this._ownParameters(type, parentCtor);\n    if (!parameters && parentCtor !== Object) {\n      parameters = this.parameters(parentCtor);\n    }\n    return parameters || [];\n  }\n\n  private _ownAnnotations(typeOrFunc: Type<any>, parentCtor: any): any[] | null {\n    // Prefer the direct API.\n    if ((<any>typeOrFunc).annotations && (<any>typeOrFunc).annotations !== parentCtor.annotations) {\n      let annotations = (<any>typeOrFunc).annotations;\n      if (typeof annotations === 'function' && annotations.annotations) {\n        annotations = annotations.annotations;\n      }\n      return annotations;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    if ((<any>typeOrFunc).decorators && (<any>typeOrFunc).decorators !== parentCtor.decorators) {\n      return convertTsickleDecoratorIntoMetadata((<any>typeOrFunc).decorators);\n    }\n\n    // API for metadata created by invoking the decorators.\n    if (this._reflect && this._reflect.getOwnMetadata) {\n      return this._reflect.getOwnMetadata('annotations', typeOrFunc);\n    }\n    return null;\n  }\n\n  annotations(typeOrFunc: Type<any>): any[] {\n    if (!isType(typeOrFunc)) {\n      return [];\n    }\n    const parentCtor = getParentCtor(typeOrFunc);\n    const ownAnnotations = this._ownAnnotations(typeOrFunc, parentCtor) || [];\n    const parentAnnotations = parentCtor !== Object ? this.annotations(parentCtor) : [];\n    return parentAnnotations.concat(ownAnnotations);\n  }\n\n  private _ownPropMetadata(typeOrFunc: any, parentCtor: any): { [key: string]: any[] } | null {\n    // Prefer the direct API.\n    if ((<any>typeOrFunc).propMetadata && (<any>typeOrFunc).propMetadata !== parentCtor.propMetadata) {\n      let propMetadata = (<any>typeOrFunc).propMetadata;\n      if (typeof propMetadata === 'function' && propMetadata.propMetadata) {\n        propMetadata = propMetadata.propMetadata;\n      }\n      return propMetadata;\n    }\n\n    // API of tsickle for lowering decorators to properties on the class.\n    if ((<any>typeOrFunc).propDecorators && (<any>typeOrFunc).propDecorators !== parentCtor.propDecorators) {\n      const propDecorators = (<any>typeOrFunc).propDecorators;\n      const propMetadata = <{ [key: string]: any[] }>{};\n      Object.keys(propDecorators).forEach(prop => {\n        propMetadata[prop] = convertTsickleDecoratorIntoMetadata(propDecorators[prop]);\n      });\n      return propMetadata;\n    }\n\n    // API for metadata created by invoking the decorators.\n    if (this._reflect && this._reflect.getOwnMetadata) {\n      return this._reflect.getOwnMetadata('propMetadata', typeOrFunc);\n    }\n    return null;\n  }\n\n  propMetadata(typeOrFunc: any): { [key: string]: any[] } {\n    if (!isType(typeOrFunc)) {\n      return {};\n    }\n    const parentCtor = getParentCtor(typeOrFunc);\n    const propMetadata: { [key: string]: any[] } = {};\n    if (parentCtor !== Object) {\n      const parentPropMetadata = this.propMetadata(parentCtor);\n      Object.keys(parentPropMetadata).forEach(propName => {\n        propMetadata[propName] = parentPropMetadata[propName];\n      });\n    }\n    const ownPropMetadata = this._ownPropMetadata(typeOrFunc, parentCtor);\n    if (ownPropMetadata) {\n      Object.keys(ownPropMetadata).forEach(propName => {\n        const decorators: any[] = [];\n        if (propMetadata.hasOwnProperty(propName)) {\n          decorators.push(...propMetadata[propName]);\n        }\n        decorators.push(...ownPropMetadata[propName]);\n        propMetadata[propName] = decorators;\n      });\n    }\n    return propMetadata;\n  }\n\n  hasLifecycleHook(type: any, lcProperty: string): boolean {\n    return type instanceof Type && lcProperty in type.prototype;\n  }\n\n  getter(name: string): GetterFn {\n    return <GetterFn>new Function('o', 'return o.' + name + ';');\n  }\n\n  setter(name: string): SetterFn {\n    return <SetterFn>new Function('o', 'v', 'return o.' + name + ' = v;');\n  }\n\n  method(name: string): MethodFn {\n    const functionBody = `if (!o.${name}) throw new Error('\"${name}\" is undefined');\n        return o.${name}.apply(o, args);`;\n    return <MethodFn>new Function('o', 'args', functionBody);\n  }\n\n  // There is not a concept of import uri in Js, but this is useful in developing Dart applications.\n  importUri(type: any): string {\n    // StaticSymbol\n    if (typeof type === 'object' && type['filePath']) {\n      return type['filePath'];\n    }\n    // Runtime type\n    return `./${stringify(type)}`;\n  }\n\n  resourceUri(type: any): string {\n    return `./${stringify(type)}`;\n  }\n\n  resolveIdentifier(name: string, moduleUrl: string, members: string[], runtime: any): any {\n    return runtime;\n  }\n  resolveEnum(enumIdentifier: any, name: string): any {\n    return enumIdentifier[name];\n  }\n}\n\nfunction convertTsickleDecoratorIntoMetadata(decoratorInvocations: any[]): any[] {\n  if (!decoratorInvocations) {\n    return [];\n  }\n  return decoratorInvocations.map(decoratorInvocation => {\n    const decoratorType = decoratorInvocation.type;\n    const annotationCls = decoratorType.annotationCls;\n    const annotationArgs = decoratorInvocation.args ? decoratorInvocation.args : [];\n    return new annotationCls(...annotationArgs);\n  });\n}\n\nfunction getParentCtor(ctor: Function): Type<any> {\n  const parentProto = Object.getPrototypeOf(ctor.prototype);\n  const parentCtor = parentProto ? parentProto.constructor : null;\n  // Note: We always use `Object` as the null value\n  // to simplify checking later on.\n  return parentCtor || Object;\n}\n"]}