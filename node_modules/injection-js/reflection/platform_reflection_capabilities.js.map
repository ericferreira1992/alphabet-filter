{"version":3,"file":"platform_reflection_capabilities.js","sourceRoot":"","sources":["../../lib/reflection/platform_reflection_capabilities.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\nimport { Type } from '../facade/type';\nimport { GetterFn, MethodFn, SetterFn } from './types';\n\nexport interface PlatformReflectionCapabilities {\n  isReflectionEnabled(): boolean;\n  factory(type: Type<any>): Function;\n  hasLifecycleHook(type: any, lcProperty: string): boolean;\n  parameters(type: Type<any>): any[][];\n  annotations(type: Type<any>): any[];\n  propMetadata(typeOrFunc: Type<any>): { [key: string]: any[] };\n  getter(name: string): GetterFn;\n  setter(name: string): SetterFn;\n  method(name: string): MethodFn;\n  importUri(type: Type<any>): string;\n  resourceUri(type: Type<any>): string;\n  resolveIdentifier(name: string, moduleUrl: string, members: string[] | null, runtime: any): any;\n  resolveEnum(enumIdentifier: any, name: string): any;\n}\n"]}