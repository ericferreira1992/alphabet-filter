{"version":3,"file":"reflector_reader.js","sourceRoot":"","sources":["../../lib/reflection/reflector_reader.ts"],"names":[],"mappings":"AAAA;;;;;;GAMG;AAEH;;;GAGG;AACH;IAAA;IAQA,CAAC;IAAD,sBAAC;AAAD,CAAC,AARD,IAQC","sourcesContent":["/**\n * @license\n * Copyright Google Inc. All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Provides read-only access to reflection data about symbols. Used internally by Angular\n * to power dependency injection and compilation.\n */\nexport abstract class ReflectorReader {\n  abstract parameters(typeOrFunc: /*Type*/ any): any[][];\n  abstract annotations(typeOrFunc: /*Type*/ any): any[];\n  abstract propMetadata(typeOrFunc: /*Type*/ any): { [key: string]: any[] };\n  abstract importUri(typeOrFunc: /*Type*/ any): string | null;\n  abstract resourceUri(typeOrFunc: /*Type*/ any): string;\n  abstract resolveIdentifier(name: string, moduleUrl: string, members: string[], runtime: any): any;\n  abstract resolveEnum(identifier: any, name: string): any;\n}\n"]}