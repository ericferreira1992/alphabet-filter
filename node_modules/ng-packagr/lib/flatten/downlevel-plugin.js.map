{"version":3,"file":"downlevel-plugin.js","sourceRoot":"","sources":["../../../src/lib/flatten/downlevel-plugin.ts"],"names":[],"mappings":";;;AAAA,2CAA8G;AAE9G,6BAA6B;AAE7B,oCAAoC;AAEpC;;GAEG;AACH,MAAM,gBAAgB,GAAoB;IACxC,MAAM,EAAE,yBAAY,CAAC,GAAG;IACxB,MAAM,EAAE,uBAAU,CAAC,MAAM;IACzB,OAAO,EAAE,IAAI;IACb,SAAS,EAAE,IAAI;IACf,aAAa,EAAE,IAAI;IACnB,kBAAkB,EAAE,IAAI;IACxB,gBAAgB,EAAE,iCAAoB,CAAC,OAAO;CAC/C,CAAC;AAEF;;;;GAIG;AACH,SAAgB,oBAAoB,CAAC,IAAY,EAAE,QAAgB;IACjE,GAAG,CAAC,KAAK,CAAC,OAAO,QAAQ,EAAE,CAAC,CAAC;IAE7B,MAAM,eAAe,mCAChB,gBAAgB,KACnB,OAAO,EAAE,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,GAChC,CAAC;IAEF,MAAM,EAAE,UAAU,EAAE,aAAa,EAAE,GAAG,4BAAe,CAAC,IAAI,EAAE;QAC1D,eAAe;KAChB,CAAC,CAAC;IAEH,OAAO;QACL,IAAI,EAAE,UAAU;QAChB,GAAG,EAAE,IAAI,CAAC,KAAK,CAAC,aAAa,CAAC;KAC/B,CAAC;AACJ,CAAC;AAhBD,oDAgBC","sourcesContent":["import { ModuleKind, ScriptTarget, CompilerOptions, transpileModule, ModuleResolutionKind } from 'typescript';\nimport { TransformResult } from 'rollup';\nimport * as path from 'path';\n\nimport * as log from '../utils/log';\n\n/**\n * Base `tsc` `CompilerOptions` shared among various downleveling methods.\n */\nconst COMPILER_OPTIONS: CompilerOptions = {\n  target: ScriptTarget.ES5,\n  module: ModuleKind.ES2015,\n  allowJs: true,\n  sourceMap: true,\n  importHelpers: true,\n  downlevelIteration: true,\n  moduleResolution: ModuleResolutionKind.Classic,\n};\n\n/**\n * Downlevels a .js file from `ES2015` to `ES5`. Internally, uses `tsc`.\n *\n * Required for some external as they contains `ES2015` syntax such as `const` and `let`\n */\nexport function downlevelCodeWithTsc(code: string, filePath: string): TransformResult {\n  log.debug(`tsc ${filePath}`);\n\n  const compilerOptions: CompilerOptions = {\n    ...COMPILER_OPTIONS,\n    mapRoot: path.dirname(filePath),\n  };\n\n  const { outputText, sourceMapText } = transpileModule(code, {\n    compilerOptions,\n  });\n\n  return {\n    code: outputText,\n    map: JSON.parse(sourceMapText),\n  };\n}\n"]}