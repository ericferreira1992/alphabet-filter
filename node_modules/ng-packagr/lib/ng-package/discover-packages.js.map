{"version":3,"file":"discover-packages.js","sourceRoot":"","sources":["../../../src/lib/ng-package/discover-packages.ts"],"names":[],"mappings":"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","sourcesContent":["import * as ajv from 'ajv';\nimport { pathExistsSync, lstat } from 'fs-extra';\nimport * as path from 'path';\nimport * as log from '../utils/log';\nimport { ensureUnixPath } from '../utils/path';\nimport { NgEntryPoint } from './entry-point/entry-point';\nimport { NgPackage } from './package';\nimport { globFiles } from '../utils/glob';\n\nconst ngPackageSchemaJson = require('../../ng-package.schema.json');\n\ninterface UserPackage {\n  /** Values from the `package.json` file of this user package. */\n  packageJson: Record<string, any>;\n  /** NgPackageConfig for this user package. */\n  ngPackageJson: Record<string, any>;\n  /** Absolute directory path of this user package. */\n  basePath: string;\n}\n\nfunction formatSchemaValidationErrors(errors: ajv.ErrorObject[]): string {\n  return errors\n    .map(err => {\n      let message = `Data path ${JSON.stringify(err.dataPath)} ${err.message}`;\n      if (err.keyword === 'additionalProperties') {\n        message += ` (${(err.params as any).additionalProperty})`;\n      }\n\n      return message + '.';\n    })\n    .join('\\n');\n}\n\n/**\n * Resolves a user's package by testing for 'package.json', 'ng-package.json', or 'ng-package.js'.\n *\n * @param folderPathOrFilePath A path pointing either to a file or a directory\n * @param isSecondary A boolean determining if this is a secondary package\n * @return The user's package\n */\nasync function resolveUserPackage(folderPathOrFilePath: string, isSecondary = false): Promise<UserPackage | undefined> {\n  const readConfigFile = async (filePath: string) => (pathExistsSync(filePath) ? import(filePath) : undefined);\n  const fullPath = path.resolve(folderPathOrFilePath);\n  const pathStats = await lstat(fullPath);\n  const basePath = pathStats.isDirectory() ? fullPath : path.dirname(fullPath);\n  const packageJson: unknown = await readConfigFile(path.join(basePath, 'package.json'));\n\n  if (!packageJson && !isSecondary) {\n    throw new Error(`Cannot discover package sources at ${folderPathOrFilePath} as 'package.json' was not found.`);\n  }\n\n  if (packageJson && typeof packageJson !== 'object') {\n    throw new Error(`Invalid 'package.json' at ${folderPathOrFilePath}.`);\n  }\n\n  let ngPackageJson: unknown;\n  if (packageJson && packageJson['ngPackage']) {\n    // Read `ngPackage` from `package.json`\n    ngPackageJson = { ...packageJson['ngPackage'] };\n  } else if (pathStats.isDirectory()) {\n    ngPackageJson = await readConfigFile(path.join(basePath, 'ng-package.json'));\n    if (!ngPackageJson) {\n      ngPackageJson = await readConfigFile(path.join(basePath, 'ng-package.js'));\n    }\n  } else {\n    ngPackageJson = await readConfigFile(fullPath);\n  }\n\n  if (ngPackageJson) {\n    const _ajv = ajv({\n      schemaId: 'auto',\n      useDefaults: true,\n      jsonPointers: true,\n    });\n\n    const validate = _ajv.compile(ngPackageSchemaJson);\n    // Add handler for x-deprecated fields\n    _ajv.addKeyword('x-deprecated', {\n      validate: (schema, _data, _parentSchema, _dataPath, _parentDataObject, propertyName) => {\n        if (schema) {\n          log.warn(`Option \"${propertyName}\" is deprecated${typeof schema == 'string' ? ': ' + schema : '.'}`);\n        }\n\n        return true;\n      },\n      errors: false,\n    });\n\n    const isValid = validate(ngPackageJson);\n    if (!isValid) {\n      throw new Error(\n        `Configuration doesn\\'t match the required schema.\\n${formatSchemaValidationErrors(validate.errors)}`,\n      );\n    }\n\n    return {\n      basePath,\n      packageJson: packageJson || {},\n      ngPackageJson: ngPackageJson as Record<string, any>,\n    };\n  }\n\n  if (pathStats.isDirectory()) {\n    // return even if it's undefined and use defaults when it's not a file\n    return undefined;\n  }\n\n  if (pathStats.isFile()) {\n    // a project file was specified but was in valid\n    if (path.basename(folderPathOrFilePath) === 'package.json') {\n      throw new Error(`Cannot read a package from 'package.json' without 'ngPackage' property.`);\n    }\n\n    throw new Error(`Trying to read a package from unsupported file extension. Path: ${folderPathOrFilePath}`);\n  }\n\n  throw new Error(`Cannot discover package sources at ${folderPathOrFilePath}`);\n}\n\n/**\n * Scans `directoryPath` and sub-folders, looking for `package.json` files.\n * Similar to `find ${directoryPath} --name package.json --exec dirname {}`.\n *\n * @param directoryPath Path pointing to a directory\n * @param excludeFolder A sub-folder of `directoryPath` that is excluded from search results.\n */\nasync function findSecondaryPackagesPaths(directoryPath: string, excludeFolder: string): Promise<string[]> {\n  const ignore = [\n    '**/node_modules/**',\n    '**/.git/**',\n    `${path.resolve(directoryPath, excludeFolder)}/**`,\n    `${directoryPath}/package.json`,\n    `${directoryPath}/ng-package.json`,\n  ];\n\n  const filePaths = await globFiles(`${directoryPath}/**/{package,ng-package}.json`, {\n    ignore,\n    cwd: directoryPath,\n  });\n\n  return filePaths.map(path.dirname);\n}\n\n/**\n * Reads a secondary entry point from it's package file.\n *\n * @param primary The primary entry point.\n * @param userPackage The user package for the secondary entry point.\n */\nfunction secondaryEntryPoint(primary: NgEntryPoint, userPackage: UserPackage): NgEntryPoint {\n  const { packageJson, ngPackageJson, basePath } = userPackage;\n  if (path.resolve(basePath) === path.resolve(primary.basePath)) {\n    log.error(`Cannot read secondary entry point. It's already a primary entry point. Path: ${basePath}`);\n    throw new Error(`Secondary entry point is already a primary.`);\n  }\n\n  const relativeSourcePath = path.relative(primary.basePath, basePath);\n  const secondaryModuleId = ensureUnixPath(`${primary.moduleId}/${relativeSourcePath}`);\n\n  return new NgEntryPoint(packageJson, ngPackageJson, basePath, {\n    moduleId: secondaryModuleId,\n    primaryDestinationPath: primary.destinationPath,\n    destinationPath: path.join(primary.destinationPath, relativeSourcePath),\n  });\n}\n\nexport async function discoverPackages({ project }: { project: string }): Promise<NgPackage> {\n  project = path.isAbsolute(project) ? project : path.resolve(project);\n\n  const { packageJson, ngPackageJson, basePath } = await resolveUserPackage(project);\n  const primary = new NgEntryPoint(packageJson, ngPackageJson, basePath);\n  log.debug(`Found primary entry point: ${primary.moduleId}`);\n\n  const folderPaths = await findSecondaryPackagesPaths(basePath, primary.$get('dest'));\n  const secondaries: NgEntryPoint[] = [];\n\n  for (const folderPath of folderPaths) {\n    const secondaryPackage = await resolveUserPackage(folderPath, true);\n    if (secondaryPackage) {\n      secondaries.push(secondaryEntryPoint(primary, secondaryPackage));\n    }\n  }\n\n  if (secondaries.length > 0) {\n    log.debug(`Found secondary entry points: ${secondaries.map(e => e.moduleId).join(', ')}`);\n  }\n\n  return new NgPackage(basePath, primary, secondaries);\n}\n"]}