{"version":3,"file":"entry-point.js","sourceRoot":"","sources":["../../../../src/lib/ng-package/entry-point/entry-point.ts"],"names":[],"mappings":"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","sourcesContent":["import * as path from 'path';\nimport { NgPackageConfig } from '../../../ng-package.schema';\nimport { CssUrl } from '../../styles/stylesheet-processor';\n\n/** A list of output absolute paths for various formats */\nexport interface DestinationFiles {\n  /** Absolute path of this entry point `declarations` */\n  declarations: string;\n  /** Absolute path of this entry point `metadata` */\n  metadata: string;\n  /** Absolute path of this entry point `FESM2015` module */\n  fesm2015: string;\n  /** Absolute path of this entry point `ESM2015` module */\n  esm2015: string;\n  /** Absolute path of this entry point `UMD` bundle */\n  umd: string;\n  /** Absolute path of this entry point `UMD` minified bundle */\n  umdMinified: string;\n}\n\n/**\n * An entry point - quoting Angular Package Format - is:\n *\n * > a module intended to be imported by the user. It is referenced by a unique module ID and\n * > exports the public API referenced by that module ID. An example is `@angular/core` or\n * > `@angular/core/testing`. Both entry points exist in the `@angular/core` package, but they\n * > export different symbols. A package can have many entry points.\n *\n * #### Public API, source file tree and build output\n *\n * An entry point serves as the root of a source tree.\n * The entry point's public API references one TypeScript source file (`*.ts`).\n * That source file, e.g. `public_api.ts`, references other source files who in turn may reference\n * other source files, thus creating a tree of source code files.\n * The source files may be TypeScript (`*.ts`), Templates (`.html`) or Stylesheets\n * (`.css`, `.scss`, ..), or other formats.\n *\n * The compilation process for an entry point is a series of transformations applied to the source\n * files, e.g. TypeScript compilation, Inlining of Stylesheets and Templates, and so on.\n * As a result of the compilation process, an entry point is transpiled to a set of artefacts\n * (the build output) which include a FESM'15 Bundle, a FESM'5 Bundle, AoT metadata, TypeScript\n * type definitions, and so on.\n *\n * #### Representation in the domain\n *\n * The set of artefacts is reflected by `NgArtefacts`;\n * one `NgEntryPoint` relates to one `NgArtefacts`.\n * The parent package of an entry point is reflected by `NgPackage`.\n */\nexport class NgEntryPoint {\n  constructor(\n    /** Values from the `package.json` file of this entry point. */\n    public readonly packageJson: Record<string, any>,\n    /** Values from either the `ngPackage` option (from `package.json`) or values from `ng-package.json`. */\n    public readonly ngPackageJson: NgPackageConfig,\n    /** Absolute directory path of this entry point's `package.json` location. */\n    public readonly basePath: string,\n    /** XX: additional auto-configured data passed for secondary entry point's. Needs better docs. */\n    private readonly secondaryData?: { [key: string]: any },\n  ) {}\n\n  /** Absolute file path of the entry point's source code entry file. */\n  public get entryFilePath(): string {\n    return path.resolve(this.basePath, this.entryFile);\n  }\n\n  /** Whether or not the entrypoint is secondary */\n  public get isSecondaryEntryPoint(): boolean {\n    return !!this.secondaryData;\n  }\n\n  /** Absolute directory path of this entry point's 'package.json'. */\n  public get destinationPath(): string {\n    if (this.secondaryData) {\n      return this.secondaryData.destinationPath;\n    } else {\n      return path.resolve(this.basePath, this.$get('dest'));\n    }\n  }\n\n  public get destinationFiles(): DestinationFiles {\n    let primaryDestPath = this.destinationPath;\n    let secondaryDir = '';\n\n    if (this.secondaryData) {\n      primaryDestPath = this.secondaryData.primaryDestinationPath;\n      secondaryDir = path.relative(primaryDestPath, this.secondaryData.destinationPath);\n    }\n\n    const flatModuleFile = this.flatModuleFile;\n    const pathJoinWithDest = (...paths: string[]) => path.join(primaryDestPath, ...paths);\n\n    return {\n      metadata: pathJoinWithDest(secondaryDir, `${flatModuleFile}.metadata.json`),\n      declarations: pathJoinWithDest(secondaryDir, `${flatModuleFile}.d.ts`),\n      esm2015: pathJoinWithDest('esm2015', secondaryDir, `${flatModuleFile}.js`),\n      fesm2015: pathJoinWithDest('fesm2015', `${flatModuleFile}.js`),\n      umd: pathJoinWithDest('bundles', `${flatModuleFile}.umd.js`),\n      umdMinified: pathJoinWithDest('bundles', `${flatModuleFile}.umd.min.js`),\n    };\n  }\n\n  public $get(key: string): any {\n    const parts = key.split('.');\n    let value = this.ngPackageJson as unknown;\n    for (const key of parts) {\n      if (typeof value === 'object' && value.hasOwnProperty(key)) {\n        value = value[key];\n      } else {\n        return undefined;\n      }\n    }\n\n    return value;\n  }\n\n  public get entryFile(): string {\n    return this.$get('lib.entryFile');\n  }\n\n  public get cssUrl(): CssUrl {\n    return this.$get('lib.cssUrl');\n  }\n\n  public get umdModuleIds(): { [key: string]: string } {\n    return this.$get('lib.umdModuleIds');\n  }\n\n  public get flatModuleFile(): string {\n    return this.$get('lib.flatModuleFile') || this.flattenModuleId('-');\n  }\n\n  public get styleIncludePaths(): string[] {\n    const includePaths = this.$get('lib.styleIncludePaths') || [];\n    return includePaths.map((includePath) =>\n      path.isAbsolute(includePath) ? includePath : path.resolve(this.basePath, includePath),\n    );\n  }\n\n  /**\n   * The module ID is an \"identifier of a module used in the import statements, e.g.\n   * '@angular/core'. The ID often maps directly to a path on the filesystem, but this\n   * is not always the case due to various module resolution strategies.\"\n   */\n  public get moduleId(): string {\n    if (this.secondaryData) {\n      return this.secondaryData.moduleId;\n    } else {\n      return this.packageJson['name'];\n    }\n  }\n\n  /**\n   * The UMD module ID registers a module on the old-fashioned JavaScript global scope.\n   * Used by UMD bundles only.\n   * Example: `@my/foo/bar` registers as `global['my']['foo']['bar']`.\n   */\n  public get umdId(): string {\n    return this.$get('lib.umdId') || this.flattenModuleId();\n  }\n\n  /**\n   * The AMD ID reflects a named module that is distributed in the UMD bundles.\n   * @link http://requirejs.org/docs/whyamd.html#namedmodules\n   */\n  public get amdId(): string {\n    return this.$get('lib.amdId') || this.moduleId;\n  }\n\n  private flattenModuleId(separator: string = '.') {\n    if (this.moduleId.startsWith('@')) {\n      return this.moduleId.substring(1).split('/').join(separator);\n    } else {\n      return this.moduleId.split('/').join(separator);\n    }\n  }\n\n  /**\n   * Enables the `\"sideEffects\": false` flag in `package.json`.\n   * The flag is enabled and set to `false` by default which results in more aggressive optimizations applied by webpack v4 builds consuming the library.\n   * To override the default behaviour, you need to set `\"sideEffects\": true` explicitly in your `package.json`.\n   *\n   * @link https://github.com/webpack/webpack/tree/master/examples/side-effects\n   */\n  public get sideEffects(): boolean | string[] {\n    return this.packageJson['sideEffects'] || false;\n  }\n}\n"]}