{"version":3,"file":"write-package.transform.js","sourceRoot":"","sources":["../../../../src/lib/ng-package/entry-point/write-package.transform.ts"],"names":[],"mappings":"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","sourcesContent":["import * as fs from 'fs-extra';\nimport * as path from 'path';\nimport { Transform, transformFromPromise } from '../../graph/transform';\nimport { NgEntryPoint } from './entry-point';\nimport { NgPackage } from '../package';\nimport { ensureUnixPath } from '../../utils/path';\nimport { rimraf } from '../../utils/rimraf';\nimport * as log from '../../utils/log';\nimport { globFiles } from '../../utils/glob';\nimport { EntryPointNode, isEntryPointInProgress, isPackage, PackageNode, fileUrl } from '../nodes';\nimport { Node } from '../../graph/node';\n\nexport const writePackageTransform: Transform = transformFromPromise(async graph => {\n  const entryPoint = graph.find(isEntryPointInProgress()) as EntryPointNode;\n  const ngEntryPoint: NgEntryPoint = entryPoint.data.entryPoint;\n  const ngPackageNode = graph.find(isPackage) as PackageNode;\n  const ngPackage = ngPackageNode.data;\n  const { destinationFiles } = entryPoint.data;\n  const ignorePaths: string[] = [\n    '.gitkeep',\n    '**/.DS_Store',\n    '**/Thumbs.db',\n    '**/node_modules/**',\n    `${ngPackage.dest}/**`,\n  ];\n\n  if (ngPackage.assets.length && !ngEntryPoint.isSecondaryEntryPoint) {\n    const assets = ngPackage.assets.map(x => path.join(ngPackage.src, x));\n    const assetFiles = await globFiles(assets, {\n      ignore: ignorePaths,\n      cache: ngPackageNode.cache.globCache,\n    });\n\n    // COPY ASSET FILES TO DESTINATION\n    log.info('Copying assets');\n    for (const file of assetFiles) {\n      const relativePath = path.relative(ngPackage.src, file);\n      const destination = path.resolve(ngPackage.dest, relativePath);\n      entryPoint.dependsOn(new Node(fileUrl(ensureUnixPath(relativePath))));\n      fs.copySync(file, destination, { overwrite: true, dereference: true });\n    }\n  }\n\n  // 6. WRITE PACKAGE.JSON\n  log.info('Writing package metadata');\n  const relativeUnixFromDestPath = (filePath: string) =>\n    ensureUnixPath(path.relative(ngEntryPoint.destinationPath, filePath));\n\n  const isIvy = !!entryPoint.data.tsConfig.options.enableIvy;\n\n  await writePackageJson(\n    ngEntryPoint,\n    ngPackage,\n    {\n      main: relativeUnixFromDestPath(destinationFiles.umd),\n      module: relativeUnixFromDestPath(destinationFiles.fesm2015),\n      es2015: relativeUnixFromDestPath(destinationFiles.fesm2015),\n      esm2015: relativeUnixFromDestPath(destinationFiles.esm2015),\n      fesm2015: relativeUnixFromDestPath(destinationFiles.fesm2015),\n      typings: relativeUnixFromDestPath(destinationFiles.declarations),\n      // Ivy doesn't generate metadata files\n      metadata: isIvy ? undefined : relativeUnixFromDestPath(destinationFiles.metadata),\n      // webpack v4+ specific flag to enable advanced optimizations and code splitting\n      sideEffects: ngEntryPoint.sideEffects,\n    },\n    isIvy,\n  );\n\n  log.success(`Built ${ngEntryPoint.moduleId}`);\n\n  return graph;\n});\n\n/**\n * Creates and writes a `package.json` file of the entry point used by the `node_module`\n * resolution strategies.\n *\n * #### Example\n *\n * A consumer of the entry point depends on it by `import {..} from '@my/module/id';`.\n * The module id `@my/module/id` will be resolved to the `package.json` file that is written by\n * this build step.\n * The properties `main`, `module`, `typings` (and so on) in the `package.json` point to the\n * flattened JavaScript bundles, type definitions, (...).\n *\n * @param entryPoint An entry point of an Angular package / library\n * @param additionalProperties Additional properties, e.g. binary artefacts (bundle files), to merge into `package.json`\n */\nasync function writePackageJson(\n  entryPoint: NgEntryPoint,\n  pkg: NgPackage,\n  additionalProperties: { [key: string]: string | boolean | string[] },\n  isIvy: boolean,\n): Promise<void> {\n  log.debug('Writing package.json');\n\n  // set additional properties\n  const packageJson = { ...entryPoint.packageJson, ...additionalProperties };\n\n  // read tslib version from `@angular/compiler` so that our tslib\n  // version at least matches that of angular if we use require('tslib').version\n  // it will get what installed and not the minimum version nor if it is a `~` or `^`\n  // this is only required for primary\n  if (!entryPoint.isSecondaryEntryPoint) {\n    if (!packageJson.peerDependencies?.tslib && !packageJson.dependencies?.tslib) {\n      const {\n        peerDependencies: angularPeerDependencies = {},\n        dependencies: angularDependencies = {},\n      } = require('@angular/compiler/package.json');\n      const tsLibVersion = angularPeerDependencies.tslib || angularDependencies.tslib;\n\n      if (tsLibVersion) {\n        packageJson.dependencies = {\n          ...packageJson.dependencies,\n          tslib: tsLibVersion,\n        };\n      }\n    } else if (packageJson.peerDependencies?.tslib) {\n      log.warn(`'tslib' is no longer recommended to be used as a 'peerDependencies'. Moving it to 'dependencies'.`);\n      packageJson.dependencies = {\n        ...(packageJson.dependencies || {}),\n        tslib: packageJson.peerDependencies.tslib,\n      };\n\n      delete packageJson.peerDependencies.tslib;\n    }\n  }\n\n  // Verify non-peerDependencies as they can easily lead to duplicate installs or version conflicts\n  // in the node_modules folder of an application\n  const whitelist = pkg.whitelistedNonPeerDependencies.map(value => new RegExp(value));\n  try {\n    checkNonPeerDependencies(packageJson, 'dependencies', whitelist);\n  } catch (e) {\n    await rimraf(entryPoint.destinationPath);\n    throw e;\n  }\n\n  // Removes scripts from package.json after build\n  if (packageJson.scripts) {\n    if (pkg.keepLifecycleScripts !== true) {\n      log.info(`Removing scripts section in package.json as it's considered a potential security vulnerability.`);\n      delete packageJson.scripts;\n    } else {\n      log.warn(\n        `You enabled keepLifecycleScripts explicitly. The scripts section in package.json will be published to npm.`,\n      );\n    }\n  }\n\n  if (isIvy && !entryPoint.isSecondaryEntryPoint) {\n    const scripts = packageJson.scripts || (packageJson.scripts = {});\n    scripts.prepublishOnly =\n      'node --eval \"console.error(\\'' +\n      'ERROR: Trying to publish a package that has been compiled by Ivy. This is not allowed.\\\\n' +\n      'Please delete and rebuild the package, without compiling with Ivy, before attempting to publish.\\\\n' +\n      '\\')\" ' +\n      '&& exit 1';\n  }\n\n  // keep the dist package.json clean\n  // this will not throw if ngPackage field does not exist\n  delete packageJson.ngPackage;\n\n  const packageJsonPropertiesToDelete = [\n    'stylelint',\n    'prettier',\n    'browserslist',\n    'devDependencies',\n    'jest',\n    'workspaces',\n    'husky',\n  ];\n\n  for (const prop of packageJsonPropertiesToDelete) {\n    if (prop in packageJson) {\n      delete packageJson[prop];\n      log.info(`Removing ${prop} section in package.json.`);\n    }\n  }\n\n  packageJson.name = entryPoint.moduleId;\n\n  // `outputJson()` creates intermediate directories, if they do not exist\n  // -- https://github.com/jprichardson/node-fs-extra/blob/master/docs/outputJson.md\n  await fs.outputJson(path.join(entryPoint.destinationPath, 'package.json'), packageJson, {\n    spaces: 2,\n  });\n}\n\nfunction checkNonPeerDependencies(packageJson: Record<string, unknown>, property: string, whitelist: RegExp[]) {\n  if (!packageJson[property]) {\n    return;\n  }\n\n  for (const dep of Object.keys(packageJson[property])) {\n    if (whitelist.find(regex => regex.test(dep))) {\n      log.debug(`Dependency ${dep} is whitelisted in '${property}'`);\n    } else {\n      log.warn(\n        `Distributing npm packages with '${property}' is not recommended. Please consider adding ${dep} to 'peerDependencies' or remove it from '${property}'.`,\n      );\n      throw new Error(`Dependency ${dep} must be explicitly whitelisted.`);\n    }\n  }\n}\n"]}