{"version":3,"file":"command.js","sourceRoot":"","sources":["../../../src/lib/commands/command.ts"],"names":[],"mappings":";;;AASA;;;;GAIG;AACH,SAAgB,OAAO,CAAO,OAAsB,EAAE,IAAQ;IAC5D,MAAM,MAAM,GAAG,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC;IAChD,IAAI,MAAM,YAAY,OAAO,EAAE;QAC7B,OAAO,MAAM,CAAC;KACf;SAAM;QACL,OAAO,OAAO,CAAC,OAAO,CAAC,MAAM,CAAC,CAAC;KAChC;AACH,CAAC;AAPD,0BAOC","sourcesContent":["/**\n * Common call signature for a command.\n *\n * @stable\n */\nexport interface Command<Arguments, Result> {\n  (args?: Arguments): Result | Promise<Result>;\n}\n\n/**\n * Executes a Command and returns its promisified result.\n *\n * @stable\n */\nexport function execute<A, R>(command: Command<A, R>, args?: A): Promise<R> {\n  const result = args ? command(args) : command();\n  if (result instanceof Promise) {\n    return result;\n  } else {\n    return Promise.resolve(result);\n  }\n}\n"]}