{"version":3,"file":"glob.js","sourceRoot":"","sources":["../../../src/lib/utils/glob.ts"],"names":[],"mappings":";;;;;;;;;;;;AAAA,6BAA6B;AAC7B,2CAAwC;AACxC,mCAA2C;AAE3C,SAAsB,SAAS,CAAC,OAA0B,EAAE,OAAuB;;QACjF,MAAM,WAAW,GAAG,OAAO,CAAC,EAAE,CAAC,qBAAS,CAAW,eAAe,CAAC,EAAE,CAAC,IAAI,CAAC,OAAO,EAAE,OAAO,EAAE,eAAe,CAAC,CAAC,CAAC;QAC/G,MAAM,KAAK,GAAG,MAAM,OAAO,CAAC,GAAG,CAAC,eAAO,CAAC,OAAO,CAAC,CAAC,GAAG,CAAC,WAAW,CAAC,CAAC,CAAC;QACnE,OAAO,eAAO,CAAC,KAAK,CAAC,CAAC;IACxB,CAAC;CAAA;AAJD,8BAIC","sourcesContent":["import * as glob from 'glob';\nimport { promisify } from './promisify';\nimport { flatten, toArray } from './array';\n\nexport async function globFiles(pattern: string | string[], options?: glob.IOptions): Promise<string[]> {\n  const globPromise = pattern => promisify<string[]>(resolveOrReject => glob(pattern, options, resolveOrReject));\n  const files = await Promise.all(toArray(pattern).map(globPromise));\n  return flatten(files);\n}\n"]}